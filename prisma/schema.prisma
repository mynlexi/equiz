// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// i use npx prisma db push --preview-feature, as heroku does not allow to create shadow dbs. -> no migration files, just 24/7 dataloss

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Quiz {
  id        Int      @default(autoincrement()) @id
  title     String
  question  String
  points    Int
  answer_1_c  String
  answer_2_c  String
  answer_3_c  String
  answer_1_1  String
  answer_1_2  String 
  answer_2_1  String 
  answer_2_2  String 
  answer_3_1  String
  answer_3_2  String 
  
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             Int
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  quizs         Quiz[]
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}